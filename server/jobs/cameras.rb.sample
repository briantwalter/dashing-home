require 'net/http'
 
@cameraDelay = 1 # Needed for image sync. 
@fetchNewImageEvery = '5s'
@camera1Host = "webcam.walternet.us"
@cameraPort = "80"
@cameraUsername = 'USERNAME'
@cameraPassword = 'PASSWORD'
@cameraURL = "/SnapshotJPEG?Resolution=320x240&Quality=Mobile"
@newFile1 = "assets/images/cameras/webcam_new.jpg"
@oldFile1 = "assets/images/cameras/webcam_old.jpg"
 
def fetch_image(host,old_file,new_file)
	`rm #{old_file}` 
	`mv #{new_file} #{old_file}`	
	Net::HTTP.start(host,@cameraPort) do |http|
		req = Net::HTTP::Get.new(@cameraURL)
		req.basic_auth @cameraUsername, @cameraPassword
		response = http.request(req)
		open(new_file, "wb") do |file|
			file.write(response.body)
		end
	end
	new_file
end
 
def make_web_friendly(file)
  "/" + File.basename(File.dirname(file)) + "/" + File.basename(file)
end
 
SCHEDULER.every @fetchNewImageEvery, first_in: 0 do
	new_file1 = fetch_image(@camera1Host,@oldFile1,@newFile1)

	if not File.exists?(@newFile1)
		warn "Failed to Get Camera Image"
	end
 
	send_event('camera1', image: make_web_friendly(@oldFile1))
	sleep(@cameraDelay)
	send_event('camera1', image: make_web_friendly(new_file1))
end
